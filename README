Obtenir un compilateur
======================
Linux ou Mac:
git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6
git clone https://android.googlesource.com/platform/prebuilts/gcc/darwin-x86/arm/arm-eabi-4.6


Déclarer les varables d'environnement
=====================================
export ARCH=arm
export CROSS_COMPILE=arm-eabi-
export PATH="/home/user/Toolchain_PATH/arm-eabi-4.6/bin:$PATH"


Compilation du noyau:
=====================
cd <kernel path>
cp mediatek-configs .config
TARGET_PRODUCT=s8073 MTK_ROOT_CUSTOM=../mediatek/custom make

Copier le fichier arch/arm/boot/zImage dans le répertoire ou vous aller l'intégrer à l'image boot à flasher.

Créer l'image boot
==================
Télécharger les scripts: unpack-MT65xx.pl et repack-MT65xx.pl.

Prendre le fichier boot.img d'origine.
unpack-MT65xx.pl boot_origine_wiko_v15.img

Récupérer l'entête du noyau d'origine.
cp header zImage_mod
( ou dd if=zImage_mod boot_origine_wiko_v15.img-kernel.img of=zImage_mod bs=512 count=1 )


l'intégrer au nouveau noyau.
dd if=zImage of=zImage_mod bs=512 seek=1

Recréer l'image boot
repack-MT65xx.pl -boot zImage_mod boot_origine_wiko_v15.img-ramdisk boot.img

Insérer boot.img à la racine de flash.zip (ou unzip zip)

Flasher
=======
Si le smartphone boot en boucle, le header est certainement mauvais (sinon, recommencez).
